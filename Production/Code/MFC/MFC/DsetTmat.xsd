<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DsetTmat" targetNamespace="http://tempuri.org/DsetTmat.xsd" xmlns:mstns="http://tempuri.org/DsetTmat.xsd" xmlns="http://tempuri.org/DsetTmat.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MFCConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MFCConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.MFC.Properties.Settings.GlobalReference.Default.MFCConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Type_MaterielTableAdapter" GeneratorDataComponentClassName="Type_MaterielTableAdapter" Name="Type_Materiel" UserDataComponentName="Type_MaterielTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MFCConnectionString (Settings)" DbObjectName="MFC.dbo.Type_Materiel" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Type_Materiel] WHERE (([ID_TypeMat] = @Original_ID_TypeMat) AND ([Nom] = @Original_Nom))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_TypeMat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_TypeMat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Type_Materiel] ([Nom]) VALUES (@Nom);
SELECT ID_TypeMat, Nom FROM Type_Materiel WHERE (ID_TypeMat = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_TypeMat, Nom FROM dbo.Type_Materiel</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Type_Materiel] SET [Nom] = @Nom WHERE (([ID_TypeMat] = @Original_ID_TypeMat) AND ([Nom] = @Original_Nom));
SELECT ID_TypeMat, Nom FROM Type_Materiel WHERE (ID_TypeMat = @ID_TypeMat)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_TypeMat" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_TypeMat" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nom" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nom" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_TypeMat" ColumnName="ID_TypeMat" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_TypeMat" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_TypeMat" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_TypeMat" DataSetColumn="ID_TypeMat" />
              <Mapping SourceColumn="Nom" DataSetColumn="Nom" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DsetTmat" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DsetTmat" msprop:Generator_UserDSName="DsetTmat">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Type_Materiel" msprop:Generator_TableClassName="Type_MaterielDataTable" msprop:Generator_TableVarName="tableType_Materiel" msprop:Generator_TablePropName="Type_Materiel" msprop:Generator_RowDeletingName="Type_MaterielRowDeleting" msprop:Generator_RowChangingName="Type_MaterielRowChanging" msprop:Generator_RowEvHandlerName="Type_MaterielRowChangeEventHandler" msprop:Generator_RowDeletedName="Type_MaterielRowDeleted" msprop:Generator_UserTableName="Type_Materiel" msprop:Generator_RowChangedName="Type_MaterielRowChanged" msprop:Generator_RowEvArgName="Type_MaterielRowChangeEvent" msprop:Generator_RowClassName="Type_MaterielRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_TypeMat" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID_TypeMat" msprop:Generator_ColumnPropNameInRow="ID_TypeMat" msprop:Generator_ColumnPropNameInTable="ID_TypeMatColumn" msprop:Generator_UserColumnName="ID_TypeMat" type="xs:int" />
              <xs:element name="Nom" msprop:Generator_ColumnVarNameInTable="columnNom" msprop:Generator_ColumnPropNameInRow="Nom" msprop:Generator_ColumnPropNameInTable="NomColumn" msprop:Generator_UserColumnName="Nom">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Type_Materiel" />
      <xs:field xpath="mstns:ID_TypeMat" />
    </xs:unique>
  </xs:element>
</xs:schema>